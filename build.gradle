plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.jetbrains.kotlin.jvm" version "1.6.20"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

ext {
    kotestVersion = '5.5.3'
}

group = 'com.whale'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.springframework.boot:spring-boot-starter-batch"
    testImplementation "org.springframework.batch:spring-batch-test"

    testImplementation("io.kotest:kotest-runner-junit5:${kotestVersion}")
    testImplementation("io.kotest:kotest-assertions-core:${kotestVersion}")
    testImplementation("io.kotest:kotest-property:${kotestVersion}")
    testImplementation("io.kotest.extensions:kotest-extensions-spring:1.1.2")
    testImplementation("io.rest-assured:spring-web-test-client:3.2.0")

    // querydsl
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-apt:5.0.0"
}

// 여기서부터 querydsl 설정
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    // jpa사용 여부와 사용할 경로를 설정
    jpa = true
    querydslSourcesDir = querydslDir
}

// build시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}

// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
